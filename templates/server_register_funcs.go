package templates

import "text/template"

func ServerRegisterFuncsTemplate() *template.Template {
	return MustCreateTemplate("server_register.go", `// Code generated by github.com/gofunct/gogen. DO NOT EDIT.

package {{.Go.Package }}

import (
	"context"

	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"google.golang.org/grpc"

	{{.PbGo.PackageName}} "{{ .PbGo.PackagePath }}"
)

// RegisterWithServer implements gogenserver.Server.RegisterWithServer.
func (s *{{.Go.StructName}}) RegisterWithServer(grpcSvr *grpc.Server) {
	{{.PbGo.PackageName}}.Register{{.Go.ServerName}}(grpcSvr, s)
}

// RegisterWithHandler implements gogenserver.Server.RegisterWithHandler.
func (s *{{.Go.StructName}}) RegisterWithHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
	return {{.PbGo.PackageName}}.Register{{.ServiceName}}ServiceHandler(ctx, mux, conn)
}
`)
}
